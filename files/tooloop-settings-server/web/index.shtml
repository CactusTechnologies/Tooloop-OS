<!--#include file="header.shtml" -->
<body class="dashboard">

  <!--#include file="sidebar.shtml" -->

  <div id="settings-panel" >

    <table class="settings-table">
      <tr>
        <td colspan="3" style="padding: 2em 0; text-align: center;">
          <p><img src="img/tooloop_logo.png" style="width:100%; max-width:240px;"/></p>
          <h1>Tooloop OS</h1>
          <span class="gray"><!--#call os_version--></span>
        </td>
      </tr>
      <tr><td colspan="3"><h2>System</h2></td></tr>
      <tr>
        <td class="label-column top">Device</td>
        <td class="value-column">
          <strong><!--#call hostname--></strong>&nbsp;&nbsp;<span class="gray">(<!--#call ip_address -->)</span >
          <p style="margin-bottom:0;">
            <button>Shutdown</button>
            <button>Reboot</button>
          </p>
        </td>
        <td rowspan="3" class="top" style="width:17em; padding-left:1em;">
          <div id="screenshot" style="position:relative; width:16em; height:10em; margin-right:2em;">
            <img src="<!--#call latest_screenshot -->" style="position: absolute; width:16em; height:9em; background-color:silver;"/>
            <!-- <a class="previous" style="position:absolute; height: 9em; background-color:rgba(0,0,0,0.5); width: 6em; color:white; text-decoration:none;" href="#">&larr;</a>
            <a class="next"  style="position:absolute; left: 10em; height: 9em; background-color:rgba(0,0,0,0.5); width: 6em;" href="#">&rarr;</a> -->
            <div class="screenshot-timestamp" style="position:absolute; top:calc(1.3333 * 9em); font-size:0.75em;">
              <script>
                var d = new Date();
                document.write( d );
              </script>
            </div>
          </div>
        </td>
      </tr>
      <tr>
        <td class="label-column top">Presentation</td>
        <td class="value-column">
          <button>Start</button>
          <button>Stop</button>
          <button>Reset</button>
        </td>
      </tr>

      <tr><td colspan="3"><h2>Status</h2></td></tr>
      <tr>
        <td class="label-column top">CPU</td>
        <td class="value-column" colspan="2">
          <!--#call cpu_name --><br/>
          <div id="cpu-usage-graph" class="graph"></div>
          <div id="cpu-temperature-graph" class="graph"></div>
        </td>
      </tr>
      <tr>
        <td class="label-column top">Graphics card</td>
        <td class="value-column" colspan="2">
          <!--#call gpu_name --><br/>
          <div id="gpu-usage-graph" class="graph"></div>
          <div id="gpu-temperature-graph" class="graph"></div>
        </td>
      </tr>
      <tr>
        <td class="label-column top">HDD usage</td>
        <td class="value-column" colspan="2">
          <table>
            <tr><td class="gray" style="padding-right: 1em;">/</td><td><progress value="<!--#call hdd_root_usage -->" max="<!--#call hdd_root_available -->"></progress></td><td>&nbsp;<label><!--#call hdd_root_usage --> / <!--#call hdd_root_available --> Mb</label></td></tr>
            <tr><td class="gray" style="padding-right: 1em;">/swap</td><td><progress value="<!--#call hdd_swap_usage -->" max="<!--#call hdd_swap_available -->"></progress></td><td>&nbsp;<label><!--#call hdd_swap_usage --> / <!--#call hdd_swap_available --> Mb</label></td></tr>
            <tr><td class="gray" style="padding-right: 1em;">/home</td><td><progress value="<!--#call hdd_home_usage -->" max="<!--#call hdd_home_available -->"></progress></td><td>&nbsp;<label><!--#call hdd_home_usage --> / <!--#call hdd_home_available --> Mb</label></td></tr>
            <tr><td class="gray" style="padding-right: 1em;">/assets</td><td><progress value="<!--#call hdd_assets_usage -->" max="<!--#call hdd_assets_available -->"></progress></td><td>&nbsp;<label><!--#call hdd_assets_usage --> / <!--#call hdd_assets_available --> Mb</label></td></tr>
          </table>
        </td>
      </tr>
    </table>

  </div>

</body>

<!--#include file="footer-scripts.shtml" -->

<script type="text/javascript" src="js/jquery.flot.min.js"></script>
<script type="text/javascript" src="js/jquery.flot.time.min.js"></script>
<script type="text/javascript" src="js/jquery.flot.resize.min.js"></script>
<script type="text/javascript">

$(document).ready(function() {

  // Start 1-second timer to call RESTful endpoint
  // setInterval(function() {
  //   $.ajax({
  //     url: '/get_cpu_usage',
  //     dataType: 'json',
  //     success: function(json) {
  //       $('#cpu-usage-label').text(json.result + ' %');
  //     }
  //   });
  // }, 1000);


  // Initialize graph
  var cpuUsageGraph = $('#cpu-usage-graph');
  var cpuTemperatureGraph = $('#cpu-temperature-graph');
  var gpuUsageGraph = $('#gpu-usage-graph');
  var gpuTemperatureGraph = $('#gpu-temperature-graph');

  var duration = 120;
  var past = Date.now() - duration * 1000;

  var options = {
    grid: { borderWidth: 1, borderColor: '#ccc', backgroundColor: "white"},
    xaxis: { mode: 'time', ticks: 5 },
    legend: { labelBoxBorderColor: 'none' },
    colors: [ '#00f', '#0cf', '#0f0', '#f00' ],
  };

  var cpuUsagePlot = $.plot(cpuUsageGraph, [[],[]], options);
  var cpuTemperatturePlot = $.plot(cpuTemperatureGraph, [[],[]], options);
  var gpuUsagePlot = $.plot(gpuUsageGraph, [[],[]], options);
  var gpuTemperatturePlot = $.plot(gpuTemperatureGraph, [[],[]], options);


  var updateGraph = function(pointsData) {
    var points = JSON.parse(pointsData)
    var data = cpuUsagePlot.getData();
    var now = Date.now();
    var oldest = now - duration * 1000;
    data[0] = {
      show: false,
      data: [[oldest, null], [now, null]]
    };

    // console.log(points));
    // console.log(data);

    // Remove old points
    $.each(data, function(di, d) {
      while (d.data.length > 0 && d.data[0][0] < oldest) {
        d.data.shift();
      }
    });

    // Add new points
    var new_usage = [now, points[0]];
    if (data[1]) {
      data[1].label = ['Usage'];
      data[1].data.push(new_usage);
    } else {
      data[1] = [{ data: new_usage }];
    }

    // Redraw the graph
    cpuUsagePlot.setData(data);
    cpuUsagePlot.setupGrid();
    cpuUsagePlot.draw();
  };

  // Create Websocket connection. For simplicity, no reconnect logic is here.
  var ws =  new WebSocket('ws://' + location.host);
  ws.onmessage = function(ev) {
    updateGraph(ev.data);
  };
  // ws.onclose = function(ev) {
  //   console.log(ev);
  // }
});

</script>

<!--#include file="footer.shtml" -->
