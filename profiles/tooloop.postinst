#!/bin/sh
# This script will be run at the end of the installation process


# Add tooloop to sudo group
adduser tooloop sudo

# Allow shutdown commands without password
cat >/etc/sudoers.d/tooloop-shutdown <<EOF
tooloop     ALL=(ALL) NOPASSWD: /sbin/poweroff, /sbin/reboot, /sbin/shutdown
EOF

# Auto login
mkdir /etc/systemd/system/getty\@tty1.service.d
cat >/etc/systemd/system/getty\@tty1.service.d/autologin.conf <<EOF
[Service]
ExecStart=
ExecStart=/sbin/agetty --skip-login --noissue --autologin "tooloop" %I
EOF

# Make the assets partition readable for the tooloop user
mkdir /assets/presentation
mkdir /assets/data
mkdir /assets/screenshots
mkdir /assets/logs

# Silent boot
augtool<<EOF
set /files/etc/default/grub/GRUB_DEFAULT 0
set /files/etc/default/grub/GRUB_TIMEOUT 0
set /files/etc/default/grub/GRUB_CMDLINE_LINUX \""console=tty12\""
set /files/etc/default/grub/GRUB_CMDLINE_LINUX_DEFAULT \""quiet loglevel=3 vga=current rd.systemd.show_status=false rd.udev.log-priority=3\""
save
EOF

update-grub2


# Change SSH port for security
augtool<<EOF
set /files/etc/ssh/sshd_config/Port 10022
save
EOF


# Nice SSH banner
augtool<<EOF
set /files/etc/ssh/sshd_config/Banner /etc/issue.net
save
EOF

cat >/etc/issue.net <<EOF




     |                         |
   --|--     _____     _____   |       _____     _____     _____
     |      /     \   /     \  |      /     \   /     \   /     \
     |     |       | |       | |     |       | |       | |       |
     |     |       | |       | |     |       | |       | |       |
      \___  \____ /   \____ /   \___  \____ /   \____ /  |  ____/
                                                         |
                  Tooloop OS 0.9  |  Debian GNU/Linux 8  |


Hint: There's a bunch of convenient aliases starting with tooloop-...
E.g. tooloop-presentation-stop, tooloop-settings

-------------------------------------------------------------------------

EOF

# Get rid of the last login message
touch /home/tooloop/.hushlogin
chown tooloop:tooloop /home/tooloop/.hushlogin

# Hide verbose kernel messages
cat >/etc/sysctl.d/20-quiet-printk.conf <<EOF
kernel.printk = 3 3 3 3
EOF


# Enable non-free and contrib packages
augtool<<EOF
setm /files/etc/apt/sources.list/*/ component "main contrib non-free"
EOF


# Unzip additional files
unzip /tmp/tooloop-files.zip -d /tmp/tooloop-files

# Copy Bash config
cp -R /tmp/tooloop-files/bash-config/bashrc /home/tooloop/.bashrc
chown tooloop:tooloop /home/tooloop/.bashrc

# Copy Openbox theme
cp -R /tmp/tooloop-files/openbox-theme/* /usr/share/themes/

# Copy Openbox config
mkdir /home/tooloop/.config
mkdir /home/tooloop/.config/openbox
cp -R /tmp/tooloop-files/openbox-config/* /home/tooloop/.config/openbox/

# Copy Openbox menu icons
mkdir /home/tooloop/.config/icons
cp -R /tmp/tooloop-files/openbox-menu-icons/* /home/tooloop/.config/icons/

# Copy start- and stop-presentation scripts
cp /tmp/tooloop-files/start-presentation.sh /assets/presentation/
cp /tmp/tooloop-files/stop-presentation.sh /assets/presentation/

# Copy Clear Sans font
cp -R /tmp/tooloop-files/clearsans /usr/share/fonts/truetype

# Copy scripts
mkdir /opt/tooloop
cp /tmp/tooloop-files/scripts/ /opt/tooloop

# Copy settings Server
mkdir /opt/tooloop/settings-server
cp /tmp/tooloop-files/tooloop-settings-server/tooloop-settings-server /opt/tooloop/settings-server/
cp -R /tmp/tooloop-files/tooloop-settings-server/web /opt/tooloop/settings-server/

# Create a systemd service for settings server
mkdir /usr/lib/systemd/system/
cat > /usr/lib/systemd/system/tooloop-settings-server.service <<EOF
[Unit]
Description=Tooloop settings server

[Service]
ExecStart=/opt/tooloop/settings-server/tooloop-settings-server
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# Enable the service
systemctl enable tooloop-settings-server

# Start the service
systemctl start tooloop-settings-server

# Create cronjob to clean up screenshots every day at 00:01
crontab -u tooloop -l | { cat; echo "1 0 * * * /opt/tooloop/scripts/clean-screenshots.sh"; } | crontab -

# ------------------------------------------------------------------------------
# finish

# Chown things to the tooloop user
chown -R tooloop:tooloop /assets/
chown -R tooloop:tooloop /home/tooloop/

# Clean up /tmp
rm /tmp/tooloop-files.zip
rm -fr /tmp/tooloop-files
